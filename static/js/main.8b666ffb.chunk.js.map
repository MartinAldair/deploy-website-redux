{"version":3,"sources":["services/AuthenticationService.js","redux/actions/authentication.js","redux/storePersist.js","redux/reducers/authenticationReducer.js","redux/reducers/catalogReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","utils/i18n/i18next.js","utils/PublicRoute.js","utils/PrivateRoute.js","AppTopbar.js","AppConfig.js","AppMenu.js","AppRightMenu.js","AppHome.js","App.js","AppWrapper.js","index.js","redux/actions/types.js"],"names":["username","password","axios","get","API_URL","params","then","response","currentToken","logoutSuccess","isLoggedIn","type","types","loginUser","recaptchaLoginUserResponse","usernameOrEmail","dispatch","AuthenticationService","data","length","tokenDecoded","jwt_decode","authValue","authorities","token","storePersist","set","loginSuccess","catch","error","status","request","console","log","Promise","reject","message","config","logout","a","localStorage","removeItem","key","state","window","setItem","JSON","stringify","result","getItem","parse","remove","getAll","clear","INITIAL_STATE","authority","user","users","selectedUser","rootReducer","combineReducers","Authentication","action","Catalog","arrayCatalogUsersC","find","item","resultCatalogUserU","userId","objIndexCatalogUserU","findIndex","eachitem","arrayCatalogUserU","resultCatalogUsersU","objIndexCatalogUsersU","id","arrayCatalogUsersU","arrayCatalogUsersD","filter","middleware","thunk","preloadedState","store","createStore","composeWithDevTools","applyMiddleware","resources","en","common","es","i18next","use","Backend","LanguageDetector","initReactI18next","init","lng","supportedLngs","fallbackLng","debug","ns","defaultNS","interpolation","escapeValue","formatSeparator","react","useSuspense","PublicRoute","grantedAuthorities","Component","component","rest","render","props","to","pathname","from","location","some","validateRole","PrivateRoute","AppTopbar","history","useHistory","useTranslation","t","i18n","isLogging","useSelector","authoritiesFromAuth","onTopbarItemClick","event","originalEvent","className","onClick","onMenuButtonClick","push","src","alt","placeholder","onRightMenuButtonClick","classNames","activeTopbarItem","inlineUser","e","_currentRole","getRoleLabel","role","confirmLogoutButtonClick","changeLanguage","AppConfig","topbarColors","label","logo","color","themeColors","changeStyleSheetUrl","value","prefix","element","document","getElementById","urlTokens","getAttribute","split","newURL","join","replaceLink","linkElement","href","cloneLinkElement","cloneNode","setAttribute","parentNode","insertBefore","nextSibling","addEventListener","componentThemesElement","map","style","cursor","theme","onThemeChange","title","topbarColorsElement","topbarColor","onTopbarColorChange","configClassName","configActive","onConfigClick","onConfigButtonClick","inputId","name","checked","layoutMode","onChange","onLayoutModeChange","htmlFor","lightMenu","onMenuColorChange","disabled","onProfileModeChange","inputStyle","onInputStyleChange","rippleActive","onRippleChange","isRTL","onOrientationChange","AppSubmenu","useState","activeIndex","setActiveIndex","isMobile","innerWidth","isHorizontalOrSlim","useCallback","isSlim","visible","getLink","index","menuitemIconClassName","icon","content","items","commonLinkProps","class","target","preventDefault","command","root","onRootMenuItemClick","onMenuItemClick","menuActive","onMenuItemMouseEnter","url","rel","exact","activeClassName","isMenuActive","mobileMenuActive","useEffect","transitionTimeout","enter","exit","i","menuitemClassName","rootMenuItem","link","tooltip","CSSTransition","timeout","in","unmountOnExit","parentMenuItemActive","getItems","AppMenu","model","active","AppRightMenu","rightPanelMenuActive","onRightMenuClick","header","showValue","AppHome","setLayoutMode","setLightMenu","overlayMenuActive","setOverlayMenuActive","staticMenuMobileActive","setStaticMenuMobileActive","staticMenuDesktopInactive","setStaticMenuDesktopInactive","setIsRTL","setInlineUser","topbarMenuActive","setTopbarMenuActive","setActiveTopbarItem","setRightPanelMenuActive","inlineUserMenuActive","setInlineUserMenuActive","setMenuActive","setTopbarColor","setTheme","setConfigActive","setInputStyle","ripple","setRipple","menuData","setMenuData","useDispatch","menuAnnonymous","menuAdministrator","badge","badgeStyleClass","menuUser","currentUserData","_role","forEach","resultado","topbarItemClick","menuClick","rightMenuClick","userMenuClick","configClick","blockBodyScroll","unblockBodyScroll","body","classList","add","replace","RegExp","hideOverlayMenu","isDesktop","isHorizontal","layoutClassName","inlineUserTimeout","prevRightPanelMenuActive","prevOverlayMenuActive","prevStaticMenuDesktopInactive","prevStaticMenuMobileActive","onTopbarMenuButtonClick","prevTopbarMenuActive","prevInlineUserMenuActive","prevMenuActive","children","prevConfigActive","PrimeReact","profileMode","orientation","menuColor","withTranslation","NotFound","lazy","EmptyPage","LandingPage","SignupPage","MyAccountPage","ManagmentAccountsPage","Dashboard","About","fallback","I18nextProvider","path","withRouter","useLocation","scrollTo","Error","Access","LoginPage","ReactDOM","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_SUCCESS","LOGOUT_FAILURE","GET_CATALOG_USER_SUCCESS","GET_CATALOG_USER_FAILURE","UPDATE_CATALOG_USER_SUCCESS","UPDATE_CATALOG_USER_FAILURE","GET_ALL_CATALOG_USERS_SUCCESS","GET_ALL_CATALOG_USERS_FAILURE","CREATE_CATALOG_USERS_SUCCESS","CREATE_CATALOG_USERS_FAILURE","UPDATE_CATALOG_USERS_SUCCESS","UPDATE_CATALOG_USERS_FAILURE","DELETE_CATALOG_USERS_SUCCESS","DELETE_CATALOG_USERS_FAILURE","SELECTED_USER","REMOVE_SELECTED_USER"],"mappings":"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","file":"static/js/main.8b666ffb.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nconst login = (username, password) => {\r\n    return axios\r\n        .get(API_URL + \"account\", {\r\n            params: {\r\n                username: username,\r\n                password: password\r\n            }\r\n        })\r\n        .then((response) => {\r\n            return response;\r\n        });\r\n}\r\n\r\nexport default {\r\n    login\r\n};","import * as types from \"./types\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport storePersist from \"../storePersist\";\r\nimport AuthenticationService from \"../../services/AuthenticationService\";\r\n\r\nconst currentToken = \"eyJhbGciOiJSUzI1NiJ9.eyJpZCI6IjEiLCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiUk9MRV9BRE1JTiJ9XX0.LdarWVkd0xHigC8JO5hz5ds4TITXfgtbirz6IwpUDyl4vS_JQD2cCaTsBo-gnxpi_p0GhA3DPkJjidxBxX9kuIg8MIsdX9k6uyulp9zF56mFTqvHKQjMqSExzYFbYuFXcvhgfsEWNvuxGYmO_4QRAwwQkNo1EnGQzxRQ0MBHoJw\";\r\n\r\nexport const loginSuccess = (isLoggedIn, authorities, token) => ({\r\n    type: types.LOGIN_SUCCESS,\r\n    isLoggedIn: isLoggedIn,\r\n    authorities: authorities,\r\n    token: token\r\n});\r\n\r\nexport const loginFailure = () => ({\r\n    type: types.LOGIN_FAILURE\r\n});\r\n\r\nexport const logoutSuccess = (isLoggedIn) => ({\r\n    type: types.LOGOUT_SUCCESS,\r\n    isLoggedIn: isLoggedIn,\r\n});\r\n\r\nexport const logoutFailure = () => ({\r\n    type: types.LOGOUT_FAILURE\r\n});\r\n\r\nexport const loginUser = (recaptchaLoginUserResponse, usernameOrEmail, password) => (dispatch) => {\r\n    return AuthenticationService.login(usernameOrEmail, password)\r\n        .then((response) => {\r\n            if (response.data.length !== 0) {\r\n                let isLoggedIn = true;\r\n                const tokenDecoded = jwt_decode(currentToken);\r\n                const authValue = {\r\n                    isLoggedIn: isLoggedIn,\r\n                    authorities: tokenDecoded.authorities,\r\n                    token: currentToken\r\n                }\r\n                storePersist.set(\"user\", authValue);\r\n                dispatch(loginSuccess(isLoggedIn, tokenDecoded.authorities, currentToken));\r\n                return response;\r\n            } else {\r\n                dispatch(loginFailure());\r\n                return response;\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            if (error.response) { /* Handling Axios error in React */\r\n                // The request was made and the server responded with a status code\r\n                const code = error.response.status;\r\n                return error.response;\r\n            } else if (error.request) {\r\n                // The request was made but no response was received `error.request` is an instance of XMLHttpRequest in the browser \r\n                // and an instance of http.ClientRequest in node.js\r\n                console.log(error.request);\r\n                return Promise.reject(error);\r\n            } else {\r\n                // Something happened in setting up the request that triggered an Error\r\n                console.log('Error', error.message);\r\n            }\r\n            console.log(error.config);\r\n        })\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    localStorage.removeItem(\"user\");\r\n    let isLoggedIn = false;\r\n    dispatch(logoutSuccess(isLoggedIn));\r\n};","export const storePersist = {\r\n    set: (key, state) => {\r\n        window.localStorage.setItem(key, JSON.stringify(state));\r\n    },\r\n    get: (key) => {\r\n        const result = window.localStorage.getItem(key);\r\n        return JSON.parse(result);\r\n    },\r\n    remove: (key) => {\r\n        window.localStorage.removeItem(key);\r\n    },\r\n    getAll: () => {\r\n        return window.localStorage;\r\n    },\r\n    clear: () => {\r\n        window.localStorage.clear();\r\n    },\r\n};\r\n\r\nexport default storePersist;","import * as types from \"../actions/types\";\r\n\r\nexport const currentRoleAnonymous = () => {\r\n    return {\r\n        authority: \"ANONYMOUS\"\r\n    }\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    isLoggedIn: false,\r\n    authorities: [currentRoleAnonymous()],\r\n    token: null\r\n};\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case types.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: action.isLoggedIn,\r\n                authorities: action.authorities,\r\n                token: action.token\r\n            };\r\n        case types.LOGIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                authorities: [currentRoleAnonymous()],\r\n                token: null\r\n            };\r\n        case types.LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: action.isLoggedIn,\r\n                authorities: [currentRoleAnonymous()],\r\n                token: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as types from \"../actions/types\";\r\n\r\nexport const INITIAL_STATE = {\r\n    user: [],\r\n    users: [],\r\n    selectedUser: null,\r\n};\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case types.CREATE_CATALOG_USERS_SUCCESS:\r\n            const arrayCatalogUsersC = action.user.find(item => item);\r\n            return {\r\n                ...state,\r\n                users: [...state.users, arrayCatalogUsersC]\r\n            };\r\n        case types.CREATE_CATALOG_USERS_FAILURE:\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...state.users\r\n                ]\r\n            };\r\n        case types.GET_CATALOG_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: [action.user]\r\n            };\r\n        case types.GET_CATALOG_USER_FAILURE:\r\n            return {\r\n                ...state,\r\n                user: []\r\n            };\r\n        case types.GET_ALL_CATALOG_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n        case types.GET_ALL_CATALOG_USERS_FAILURE:\r\n            return {\r\n                ...state,\r\n                users: []\r\n            };\r\n        case types.UPDATE_CATALOG_USER_SUCCESS:\r\n            const resultCatalogUserU = action.user.find(item => item.userId);\r\n            const objIndexCatalogUserU = state.user.findIndex(eachitem => eachitem.userId === resultCatalogUserU.userId);\r\n            const arrayCatalogUserU = [...state.user]; //Copying state array\r\n            arrayCatalogUserU[objIndexCatalogUserU] = resultCatalogUserU;\r\n            return {\r\n                ...state,\r\n                user: arrayCatalogUserU // reassigning all array to new array\r\n            }\r\n        case types.UPDATE_CATALOG_USER_FAILURE:\r\n            return {\r\n                ...state,\r\n                user: [\r\n                    ...state.user\r\n                ]\r\n            };\r\n        case types.UPDATE_CATALOG_USERS_SUCCESS:\r\n            const resultCatalogUsersU = action.user.find(item => item);\r\n            const objIndexCatalogUsersU = state.users.findIndex(eachitem => eachitem.id === resultCatalogUsersU.id);\r\n            const arrayCatalogUsersU = [...state.users]; //Copying state array\r\n            arrayCatalogUsersU[objIndexCatalogUsersU] = resultCatalogUsersU;\r\n            return {\r\n                ...state,\r\n                users: arrayCatalogUsersU // reassigning all array to new array\r\n            }\r\n        case types.UPDATE_CATALOG_USERS_FAILURE:\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...state.users\r\n                ]\r\n            };\r\n        case types.DELETE_CATALOG_USERS_SUCCESS:\r\n            const arrayCatalogUsersD = state.users.filter(({ id }) => id !== action.id);\r\n            return {\r\n                ...state,\r\n                users: arrayCatalogUsersD\r\n            }\r\n        case types.DELETE_CATALOG_USERS_FAILURE:\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...state.users\r\n                ]\r\n            };\r\n        case types.SELECTED_USER:\r\n            return {\r\n                ...state,\r\n                selectedUser: action.selectedUser\r\n            };\r\n        case types.REMOVE_SELECTED_USER:\r\n            return {\r\n                ...state,\r\n                selectedUser: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport Authentication from \"./authenticationReducer\";\r\nimport Catalog from \"./catalogReducer\";\r\n\r\n// combining reducers into a single reducer\r\nconst rootReducer = combineReducers({\r\n    Authentication: Authentication,\r\n    Catalog: Catalog\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from '../reducers/rootReducer'\r\nimport storePersist from \"../storePersist\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst preloadedState = storePersist.get(\"user\")\r\n    ? { Authentication: storePersist.get(\"user\") }\r\n    : {};\r\n\r\nconst store = createStore(rootReducer, preloadedState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store;","import i18next from \"i18next\";\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport Backend from \"i18next-http-backend\";\r\nimport LanguageDetector from 'i18next-browser-languagedetector'; //OPTIONAL\r\nimport common_en from \"../translations/en/common.json\";\r\nimport common_es from \"../translations/es/common.json\";\r\n\r\nconst resources = {\r\n    en: {\r\n        common: common_en               // 'common' is our custom namespace\r\n    },\r\n    es: {\r\n        common: common_es               // 'common' is our custom namespace\r\n    }\r\n}\r\n\r\ni18next\r\n    // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n    // learn more: https://github.com/i18next/i18next-http-backend\r\n    .use(Backend)\r\n    // detect user language\r\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n    .use(LanguageDetector) // OPTIONAL\r\n    .use(initReactI18next)\r\n    // init i18next\r\n    // for all options read: https://www.i18next.com/overview/configuration-options\r\n    .init({\r\n        // we init with resources\r\n        resources,\r\n        lng: 'en',\r\n        supportedLngs: [\"es\", \"en\"],\r\n        fallbackLng: 'en',                           // language to use\r\n        debug: false,\r\n        //  default namespace used if not passed to 'translation function'\r\n        ns: [\"common\"],\r\n        defaultNS: \"common\",\r\n\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by defaul\r\n            formatSeparator: \",\"\r\n        },\r\n        // react i18next special options (optional)\r\n        react: {\r\n            useSuspense: false //   <---- this will do the magic\r\n        }\r\n\r\n    });\r\n\r\nexport default i18next;","import React, { useState, useEffect, useRef, useCallback, Fragment, Suspense, lazy } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport storePersist from \"../redux/storePersist\";\r\n\r\nconst validateRole = (authorities, props, Component) => {\r\n    let isValidRole = authorities.some(item => item.authority === 'ANONYMOUS');\r\n    if (!isValidRole) {\r\n        return <Redirect to={{ pathname: '/' }} />\r\n    } else {\r\n        try {\r\n            return <Component {...props} />\r\n        } catch (error) {\r\n            return <Redirect to={{ pathname: '/' }} />\r\n        }\r\n    }\r\n}\r\n\r\nconst PublicRoute = ({ grantedAuthorities: authorities, component: Component, ...rest }) => {\r\n    return <Route\r\n        {...rest}\r\n        render={props => (\r\n            storePersist.get(\"user\") ? (\r\n                <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n            ) : (\r\n                validateRole(authorities, props, Component)\r\n            )\r\n        )} />\r\n}\r\n\r\nexport {\r\n    PublicRoute\r\n};","import React, { useState, useEffect, useRef, useCallback, Fragment, Suspense, lazy } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport storePersist from \"../redux/storePersist\";\r\n\r\nconst validateRole = (authorities, props, Component) => {\r\n    let isValidRole = authorities.some(item => item.authority === 'ROLE_ADMIN' && 'ROLE_USER');\r\n    if (!isValidRole) {\r\n        return <Redirect to={{ pathname: '/' }} />\r\n    } else {\r\n        try {\r\n            return <Component {...props} />\r\n        } catch (error) {\r\n            return <Redirect to={{ pathname: '/' }} />\r\n        }\r\n    }\r\n}\r\n\r\nconst PrivateRoute = ({ grantedAuthorities: authorities, component: Component, ...rest }) => {\r\n    return <Route\r\n        {...rest}\r\n        render={props => (\r\n            storePersist.get(\"user\") ? (\r\n                validateRole(authorities, props, Component)\r\n            ) : (\r\n                <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n            )\r\n        )} />\r\n}\r\n\r\nexport {\r\n    PrivateRoute\r\n};","import React, { useState, useEffect, useRef, useCallback, Fragment, Suspense, lazy } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport classNames from 'classnames';\r\nimport { useHistory } from 'react-router-dom';\r\n// import hook for translations and i18n configuration file\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst AppTopbar = (props) => {\r\n\r\n    const history = useHistory();\r\n    // destructuring t() function for useTranslation()\r\n    const [t, i18n] = useTranslation('common');\r\n    const { isLoggedIn: isLogging } = useSelector((state) => state.Authentication);\r\n    const { authorities: authoritiesFromAuth } = useSelector((state) => state.Authentication);\r\n\r\n    const onTopbarItemClick = (event, item) => {\r\n        if (props.onTopbarItemClick) {\r\n            props.onTopbarItemClick({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n    }\r\n\r\n    const getRoleLabel = (_currentRole) => {\r\n        const currentRole = _currentRole.find(item => item.authority);\r\n        switch (currentRole.authority) {\r\n            case 'ROLE_ADMIN':\r\n                return `${t(\"globalLabel.roleTitle1\")}`;\r\n            case 'ROLE_USER':\r\n                return `${t(\"globalLabel.roleTitle2\")}`;\r\n            default:\r\n                return 'NA';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"layout-topbar\">\r\n                <button type=\"button\" className=\"p-link layout-menu-button layout-topbar-icon\" onClick={props.onMenuButtonClick}>\r\n                    <i className=\"pi pi-bars\"></i>\r\n                </button>\r\n\r\n                <button type=\"button\" className=\"p-link layout-topbar-logo\" onClick={() => history.push('/')}>\r\n                    <img id=\"topbar-logo\" src=\"assets/layout/images/logo-roma-white.svg\" alt=\"roma-react\" />\r\n                </button>\r\n\r\n                <span className=\"layout-topbar-search\">\r\n                    <i className=\"pi pi-search\"></i>\r\n                    <input type=\"text\" placeholder=\"Enter your search term\" />\r\n                </span>\r\n\r\n                <button type=\"button\" className=\"p-link layout-right-panel-button layout-topbar-icon\" onClick={props.onRightMenuButtonClick}>\r\n                    <i className=\"pi pi-ellipsis-v\"></i>\r\n                </button>\r\n\r\n                <ul className=\"topbar-menu\">\r\n\r\n\r\n                    {isLogging === false ? (\r\n                        <Fragment>\r\n                        </Fragment>\r\n                    ) : (\r\n                        <Fragment>\r\n                            <li className={classNames('user-profile', { 'active-topmenuitem fadeInDown': props.activeTopbarItem === 'profile' })}>\r\n                                {!props.inlineUser && <button type=\"button\" className=\"p-link\" onClick={(e) => onTopbarItemClick(e, 'profile')}>\r\n                                    <img src=\"assets/layout/images/avatar.png\" alt=\"roma-layout\" />\r\n                                    <div className=\"layout-profile-userinfo\">\r\n                                        <span className=\"layout-profile-name\">Arlene Welch</span>\r\n                                        <span className=\"layout-profile-role\">\r\n                                            {getRoleLabel(authoritiesFromAuth)}\r\n                                        </span>\r\n                                    </div>\r\n                                </button>}\r\n                                <ul className=\"fadeInDown\">\r\n                                    <li role=\"menuitem\">\r\n                                        <button type=\"button\" className=\"p-link\" onClick={() => history.push('/account')}>\r\n                                            <i className=\"pi pi-fw pi-user\"></i>\r\n                                            <span>{t(\"globalButton.formButtonTitle5\")}</span>\r\n                                        </button>\r\n                                    </li>\r\n                                    <li role=\"menuitem\">\r\n                                        <button type=\"button\" className=\"p-link\">\r\n                                            <i className=\"pi pi-fw pi-cog\"></i>\r\n                                            <span>{t(\"globalButton.formButtonTitle6\")}</span>\r\n                                        </button>\r\n                                    </li>\r\n                                    <li role=\"menuitem\">\r\n                                        <button type=\"button\" className=\"p-link\">\r\n                                            <i className=\"pi pi-fw pi-envelope\"></i>\r\n                                            <span>{t(\"globalButton.formButtonTitle7\")}</span>\r\n                                        </button>\r\n                                    </li>\r\n                                    <li role=\"menuitem\">\r\n                                        <button type=\"button\" className=\"p-link\">\r\n                                            <i className=\"pi pi-fw pi-bell\"></i>\r\n                                            <span>{t(\"globalButton.formButtonTitle8\")}</span>\r\n                                        </button>\r\n                                    </li>\r\n                                    <li role=\"menuitem\">\r\n                                        <button type=\"button\" className=\"p-link\" onClick={props.confirmLogoutButtonClick}>\r\n                                            <i className=\"pi pi-fw pi-sign-out\"></i>\r\n                                            <span>{t(\"globalButton.formButtonTitle4\")}</span>\r\n                                        </button>\r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                        </Fragment>\r\n                    )}\r\n\r\n                    <li className={classNames({ 'active-topmenuitem fadeInDown': props.activeTopbarItem === 'settings' })}>\r\n                        <button type=\"button\" className=\"p-link layout-topbar-icon\" onClick={(e) => onTopbarItemClick(e, 'settings')}>\r\n                            <i className=\"topbar-icon pi pi-fw pi-bell\"></i>\r\n                        </button>\r\n                        <ul className=\"fadeInDown\">\r\n                            <li role=\"menuitem\">\r\n                                <button type=\"button\" className=\"p-link\">\r\n                                    <img src=\"assets/layout/images/avatar1.png\" alt=\"roma-react\" />\r\n                                    <div className=\"topbar-menu-info\">\r\n                                        <span className=\"topbar-menu-name\">Bithika Abhedananda</span>\r\n                                        <span className=\"topbar-menu-role\">User interface review is done.</span>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                            <li role=\"menuitem\">\r\n                                <button type=\"button\" className=\"p-link\">\r\n                                    <img src=\"assets/layout/images/avatar2.png\" alt=\"roma-react\" />\r\n                                    <div className=\"topbar-menu-info\">\r\n                                        <span className=\"topbar-menu-name\">Dai Jiang</span>\r\n                                        <span className=\"topbar-menu-role\">Uh, we have sort of a problem here.</span>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n\r\n                    <li className={classNames({ 'active-topmenuitem fadeInDown': props.activeTopbarItem === 'language' })}>\r\n                        <button type=\"button\" className=\"p-link layout-topbar-icon\" onClick={(e) => onTopbarItemClick(e, 'language')}>\r\n                            <i className=\"topbar-icon fa fa-fw fas fa-language\"></i>\r\n                        </button>\r\n                        <ul className=\"fadeInDown\">\r\n                            <li role=\"menuitem\">\r\n                                <button type=\"button\" className=\"p-link\" onClick={() => i18n.changeLanguage('en')}>\r\n                                    <img src=\"assets/layout/images/EUA.png\" alt=\"roma-react\" />\r\n                                    <div className=\"topbar-menu-info\" >\r\n                                        <span className=\"topbar-menu-name\">{t('language.title')}</span>\r\n                                        <span className=\"topbar-menu-role\">{t('language.english')}</span>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                            <li role=\"menuitem\">\r\n                                <button type=\"button\" className=\"p-link\" onClick={() => i18n.changeLanguage('es')}>\r\n                                    <img src=\"assets/layout/images/MX.png\" alt=\"roma-react\" />\r\n                                    <div className=\"topbar-menu-info\">\r\n                                        <span className=\"topbar-menu-name\">{t('language.title')}</span>\r\n                                        <span className=\"topbar-menu-role\">{t('language.spanish')}</span>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default AppTopbar;","import React, { useState, useEffect, useRef, useCallback, Fragment, Suspense, lazy } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { InputSwitch } from 'primereact/inputswitch';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport classNames from 'classnames';\r\n\r\nconst AppConfig = (props) => {\r\n\r\n\tconst { isLoggedIn: isLogging } = useSelector((state) => state.Authentication);\r\n\r\n\tconst topbarColors = [\r\n\t\t{ label: 'layout-topbar-light', logo: 'logo-roma', color: '#ffffff' },\r\n\t\t{ label: 'layout-topbar-dark', logo: 'logo-roma-white', color: '#252529' },\r\n\t\t{ label: 'layout-topbar-blue', logo: 'logo-roma-white', color: '#0772B3' },\r\n\t\t{ label: 'layout-topbar-green', logo: 'logo-roma-white', color: '#0F8C50' },\r\n\t\t{ label: 'layout-topbar-orange', logo: 'logo-roma-white', color: '#C76D09' },\r\n\t\t{ label: 'layout-topbar-magenta', logo: 'logo-roma-white', color: '#972BB1' },\r\n\t\t{ label: 'layout-topbar-bluegrey', logo: 'logo-roma-white', color: '#406E7E' },\r\n\t\t{ label: 'layout-topbar-deeppurple', logo: 'logo-roma-white', color: '#543CD9' },\r\n\t\t{ label: 'layout-topbar-brown', logo: 'logo-roma-white', color: '#794F36' },\r\n\t\t{ label: 'layout-topbar-lime', logo: 'logo-roma-white', color: '#849201' },\r\n\t\t{ label: 'layout-topbar-rose', logo: 'logo-roma-white', color: '#8F3939' },\r\n\t\t{ label: 'layout-topbar-cyan', logo: 'logo-roma-white', color: '#0C8990' },\r\n\t\t{ label: 'layout-topbar-teal', logo: 'logo-roma-white', color: '#337E59' },\r\n\t\t{ label: 'layout-topbar-deeporange', logo: 'logo-roma-white', color: '#D74A1D' },\r\n\t\t{ label: 'layout-topbar-indigo', logo: 'logo-roma-white', color: '#3D53C9' },\r\n\t\t{ label: 'layout-topbar-pink', logo: 'logo-roma-white', color: '#BF275B' },\r\n\t\t{ label: 'layout-topbar-purple', logo: 'logo-roma-white', color: '#7F32DA' }\r\n\t];\r\n\r\n\tconst themeColors = [\r\n\t\t{ label: 'blue', color: '#0f97c7' },\r\n\t\t{ label: 'green', color: '#10B163' },\r\n\t\t{ label: 'bluegrey', color: '#578697' }\r\n\t];\r\n\r\n\tconst onTopbarColorChange = (topbarColor, logo) => {\r\n\t\tprops.onTopbarColorChange(topbarColor);\r\n\t\tconst topbarLogoLink = document.getElementById('topbar-logo');\r\n\t\ttopbarLogoLink.src = '/assets/layout/images/' + logo + '.svg';\r\n\t};\r\n\r\n\tconst onThemeChange = (theme) => {\r\n\t\tprops.onThemeChange(theme);\r\n\t\tchangeStyleSheetUrl('layout-css', theme, 'layout');\r\n\t\tchangeStyleSheetUrl('theme-css', theme, 'theme');\r\n\t};\r\n\r\n\tconst changeStyleSheetUrl = (id, value, prefix) => {\r\n\t\tlet element = document.getElementById(id);\r\n\t\tlet urlTokens = element.getAttribute('href').split('/');\r\n\t\turlTokens[urlTokens.length - 1] = prefix + '-' + value + '.css';\r\n\t\tlet newURL = urlTokens.join('/');\r\n\t\treplaceLink(element, newURL);\r\n\t};\r\n\r\n\tconst replaceLink = (linkElement, href) => {\r\n\t\tconst id = linkElement.getAttribute('id');\r\n\t\tconst cloneLinkElement = linkElement.cloneNode(true);\r\n\r\n\t\tcloneLinkElement.setAttribute('href', href);\r\n\t\tcloneLinkElement.setAttribute('id', id + '-clone');\r\n\r\n\t\tlinkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);\r\n\r\n\t\tcloneLinkElement.addEventListener('load', () => {\r\n\t\t\tlinkElement.remove();\r\n\t\t\tcloneLinkElement.setAttribute('id', id);\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tconst getTopbarColors = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"layout-themes topbar-colors\">\r\n\t\t\t\t{\r\n\t\t\t\t\ttopbarColors.map(t => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={t.label}>\r\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"p-link layout-config-option-color\" style={{ cursor: 'pointer', 'backgroundColor': t.color }} onClick={() => onTopbarColorChange(t.label, t.logo)} title={t.label}>\r\n\t\t\t\t\t\t\t\t\t{props.topbarColor === t.label && <i className=\"pi pi-check\"></i>}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst getComponentThemes = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"layout-themes\">\r\n\t\t\t\t{\r\n\t\t\t\t\tthemeColors.map(t => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={t.label}>\r\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"p-link layout-config-option-color\" style={{ cursor: 'pointer', 'backgroundColor': t.color }} onClick={() => onThemeChange(t.label)} title={t.label}>\r\n\t\t\t\t\t\t\t\t\t{props.theme === t.label && <i className=\"pi pi-check\"></i>}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst componentThemesElement = getComponentThemes();\r\n\tconst topbarColorsElement = getTopbarColors();\r\n\tconst configClassName = classNames('layout-config', { 'layout-config-active': props.configActive });\r\n\r\n\treturn (\r\n\t\t<div id=\"layout-config\" className={configClassName} onClick={props.onConfigClick}>\r\n\r\n\t\t\t<button type=\"button\" className=\"layout-config-button p-link\" id=\"layout-config-button\" onClick={(e) => props.onConfigButtonClick(e)}>\r\n\t\t\t\t<i className=\"pi pi-cog\"></i>\r\n\t\t\t</button>\r\n\r\n\t\t\t<div className=\"layout-config-header\">\r\n\t\t\t\t<h3>Theme Customization</h3>\r\n\t\t\t\t<span>Roma offers different themes for layout, topbar, menu etc.</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"layout-config-content\">\r\n\t\t\t\t<div className=\"layout-config-section options\">\r\n\t\t\t\t\t<span className=\"section-name\">Menu Mode</span>\r\n\t\t\t\t\t<div className=\"p-formgroup-inline menu-type p-grid p-nogutter\">\r\n\t\t\t\t\t\t<div className=\"p-field-radiobutton p-md-6\">\r\n\t\t\t\t\t\t\t<RadioButton inputId=\"static\" name=\"layoutMode\" value=\"static\" checked={props.layoutMode === 'static'} onChange={(e) => props.onLayoutModeChange(e.value)} />\r\n\t\t\t\t\t\t\t<label htmlFor=\"static\">Static</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"p-field-radiobutton p-md-6\">\r\n\t\t\t\t\t\t\t<RadioButton inputId=\"overlay\" name=\"layoutMode\" value=\"overlay\" checked={props.layoutMode === 'overlay'} onChange={(e) => props.onLayoutModeChange(e.value)} />\r\n\t\t\t\t\t\t\t<label htmlFor=\"overlay\">Overlay</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"p-field-radiobutton p-md-6\">\r\n\t\t\t\t\t\t\t<RadioButton inputId=\"horizontal\" name=\"layoutMode\" value=\"horizontal\" checked={props.layoutMode === 'horizontal'} onChange={(e) => props.onLayoutModeChange(e.value)} />\r\n\t\t\t\t\t\t\t<label htmlFor=\"horizontal\">Horizontal</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"p-field-radiobutton p-md-6\">\r\n\t\t\t\t\t\t\t<RadioButton inputId=\"slim\" name=\"layoutMode\" value=\"slim\" checked={props.layoutMode === 'slim'} onChange={(e) => props.onLayoutModeChange(e.value)} />\r\n\t\t\t\t\t\t\t<label htmlFor=\"slim\">Slim</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"layout-config-section options\">\r\n\t\t\t\t\t<span className=\"section-name\">Menu Color</span>\r\n\t\t\t\t\t<div className=\"p-formgroup-inline p-grid p-nogutter\">\r\n\t\t\t\t\t\t<div className=\"p-field-radiobutton p-md-6\">\r\n\t\t\t\t\t\t\t<RadioButton inputId=\"dark\" name=\"layoutColorMode\" value={false} checked={!props.lightMenu} onChange={(e) => props.onMenuColorChange(e.value)} />\r\n\t\t\t\t\t\t\t<label htmlFor=\"dark\">Dark</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"p-field-radiobutton p-md-6\">\r\n\t\t\t\t\t\t\t<RadioButton inputId=\"light\" name=\"layoutColorMode\" value={true} checked={props.lightMenu} onChange={(e) => props.onMenuColorChange(e.value)} />\r\n\t\t\t\t\t\t\t<label htmlFor=\"light\">Light</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{isLogging === false ? (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<div className=\"layout-config-section options\">\r\n\t\t\t\t\t\t\t<span className=\"section-name\">User Profile</span>\r\n\t\t\t\t\t\t\t<div className=\"p-formgroup-inline p-grid p-nogutter\">\r\n\t\t\t\t\t\t\t\t<div className=\"p-field-radiobutton p-md-6\">\r\n\t\t\t\t\t\t\t\t\t<RadioButton inputId=\"inline\" name=\"inlineUser\" value={true} checked={props.inlineUser} disabled={props.layoutMode === 'horizontal'} onChange={(e) => props.onProfileModeChange(e.value)} />\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"inline\">Inline</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"p-field-radiobutton p-md-6\">\r\n\t\t\t\t\t\t\t\t\t<RadioButton inputId=\"overlayUser\" name=\"inlineUser\" value={false} checked={!props.inlineUser} disabled={props.layoutMode === 'horizontal'} onChange={(e) => props.onProfileModeChange(e.value)} />\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"overlayUser\">Overlay</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<div className=\"layout-config-section options\">\r\n\t\t\t\t\t<span className=\"section-name\">Input Background</span>\r\n\t\t\t\t\t<div className=\"p-formgroup-inline\">\r\n\t\t\t\t\t\t<div className=\"p-field-radiobutton\">\r\n\t\t\t\t\t\t\t<RadioButton inputId=\"input_outlined\" name=\"inputstyle\" value=\"outlined\" checked={props.inputStyle === 'outlined'} onChange={(e) => props.onInputStyleChange(e.value)} />\r\n\t\t\t\t\t\t\t<label htmlFor=\"input_outlined\">Outlined</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"p-field-radiobutton\">\r\n\t\t\t\t\t\t\t<RadioButton inputId=\"input_filled\" name=\"inputstyle\" value=\"filled\" checked={props.inputStyle === 'filled'} onChange={(e) => props.onInputStyleChange(e.value)} />\r\n\t\t\t\t\t\t\t<label htmlFor=\"input_filled\">Filled</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"layout-config-section dark\">\r\n\t\t\t\t\t<span className=\"section-name\">Ripple Effect</span>\r\n\t\t\t\t\t<InputSwitch checked={props.rippleActive} onChange={props.onRippleChange} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"layout-config-section options\">\r\n\t\t\t\t\t<span className=\"section-name\">Orientation</span>\r\n\t\t\t\t\t<div className=\"p-formgroup-inline p-grid p-nogutter\">\r\n\t\t\t\t\t\t<div className=\"p-field-radiobutton p-md-6\">\r\n\t\t\t\t\t\t\t<RadioButton inputId=\"ltr\" name=\"isRTL\" value={false} checked={!props.isRTL} onChange={(e) => props.onOrientationChange(e.value)} />\r\n\t\t\t\t\t\t\t<label htmlFor=\"ltr\">LTR</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"p-field-radiobutton p-md-6\">\r\n\t\t\t\t\t\t\t<RadioButton inputId=\"rtl\" name=\"isRTL\" value={true} checked={props.isRTL} onChange={(e) => props.onOrientationChange(e.value)} />\r\n\t\t\t\t\t\t\t<label htmlFor=\"rtl\">RTL</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"layout-config-section colors\">\r\n\t\t\t\t\t<span className=\"section-name\">Topbar Colors</span>\r\n\t\t\t\t\t{topbarColorsElement}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"layout-config-section colors\">\r\n\t\t\t\t\t<span className=\"section-name\">Component Themes</span>\r\n\t\t\t\t\t{componentThemesElement}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default AppConfig;","import React, { useState, useEffect, useRef, useCallback, Fragment, Suspense, lazy } from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport classNames from 'classnames';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Ripple } from 'primereact/ripple';\r\n\r\nconst AppSubmenu = (props) => {\r\n\r\n    const [activeIndex, setActiveIndex] = useState(null)\r\n\r\n    const onMenuItemClick = (event, item, index) => {\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        //execute command\r\n        if (item.command) {\r\n            item.command({ originalEvent: event, item: item });\r\n            event.preventDefault();\r\n        }\r\n        if (item.items) {\r\n            event.preventDefault();\r\n        }\r\n        if (props.root) {\r\n            props.onRootMenuItemClick({\r\n                originalEvent: event,\r\n            });\r\n        }\r\n        if (item.items) {\r\n            setActiveIndex(index === activeIndex ? null : index);\r\n        }\r\n\r\n        props.onMenuItemClick({\r\n            originalEvent: event,\r\n            item: item\r\n        });\r\n    };\r\n\r\n    const onMenuItemMouseEnter = (index) => {\r\n        if (props.root && props.menuActive && isHorizontalOrSlim() && !isMobile()) {\r\n            setActiveIndex(index)\r\n        }\r\n    };\r\n\r\n    const isMobile = () => {\r\n        return window.innerWidth <= 1025;\r\n    };\r\n\r\n    const isHorizontalOrSlim = useCallback(() => {\r\n        return (props.layoutMode === 'horizontal' || props.layoutMode === 'slim');\r\n    }, [props.layoutMode]);\r\n\r\n    const isSlim = useCallback(() => {\r\n        return props.layoutMode === 'slim';\r\n    }, [props.layoutMode]);\r\n\r\n    const visible = (item) => {\r\n        return typeof item.visible === \"function\" ? item.visible() : item.visible !== false;\r\n    };\r\n\r\n    const getLink = (item, index) => {\r\n        const menuitemIconClassName = classNames('layout-menuitem-icon', item.icon);\r\n        const content = (\r\n            <>\r\n                <i className={menuitemIconClassName}></i>\r\n                <span className=\"layout-menuitem-text\">{item.label}</span>\r\n                { item.items && <i className=\"pi pi-fw pi-angle-down layout-submenu-toggler\"></i>}\r\n                <Ripple />\r\n            </>\r\n        );\r\n        const commonLinkProps = {\r\n            'style': item.style,\r\n            'className': classNames(item.class, 'p-ripple', { 'p-disabled': item.disabled, 'p-link': !item.to }),\r\n            'target': item.target,\r\n            'onClick': (e) => onMenuItemClick(e, item, index),\r\n            'onMouseEnter': () => onMenuItemMouseEnter(index)\r\n        }\r\n\r\n        if (item.url) {\r\n            return <a href={item.url} rel=\"noopener noreferrer\" {...commonLinkProps}>{content}</a>\r\n        }\r\n        else if (!item.to) {\r\n            return <button type=\"button\" {...commonLinkProps}>{content}</button>\r\n        }\r\n\r\n        return <NavLink to={item.to} exact activeClassName=\"active-menuitem-routerlink\" {...commonLinkProps}>{content}</NavLink>;\r\n    };\r\n\r\n    const isMenuActive = (item, index) => {\r\n        return item.items && (props.root && (!isSlim() || (isSlim() && (props.mobileMenuActive || activeIndex !== null))) ? true : activeIndex === index);\r\n    }\r\n\r\n    const getItems = () => {\r\n        const transitionTimeout = props.mobileMenuActive ? 0 : (isSlim() && props.root ? { enter: 0, exit: 0 } : (props.root ? 0 : { enter: 1000, exit: 450 }));\r\n        return props.items.map((item, i) => {\r\n            if (visible(item)) {\r\n                const menuitemClassName = classNames({ 'layout-root-menuitem': props.root, 'active-menuitem': activeIndex === i && !item.disabled });\r\n                const rootMenuItem = props.root && <div className=\"layout-menuitem-root-text\">{item.label}</div>;\r\n                const link = getLink(item, i);\r\n                const tooltip = (\r\n                    <div className=\"layout-menu-tooltip\">\r\n                        <div className=\"layout-menu-tooltip-arrow\"></div>\r\n                        <div className=\"layout-menu-tooltip-text\">{item.label}</div>\r\n                    </div>\r\n                );\r\n\r\n                return (\r\n                    <li key={item.label || i} className={menuitemClassName} role=\"menuitem\">\r\n                        {rootMenuItem}\r\n                        {link}\r\n                        {tooltip}\r\n                        <CSSTransition classNames=\"p-toggleable-content\" timeout={transitionTimeout} in={isMenuActive(item, i)} unmountOnExit>\r\n                            <AppSubmenu items={visible(item) && item.items} menuActive={props.menuActive} layoutMode={props.layoutMode} parentMenuItemActive={activeIndex === i} onMenuItemClick={props.onMenuItemClick}></AppSubmenu>\r\n                        </CSSTransition>\r\n                    </li>\r\n                );\r\n            }\r\n\r\n            return null;\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!props.menuActive && isHorizontalOrSlim()) {\r\n            setActiveIndex(null);\r\n        }\r\n    }, [props.menuActive, isHorizontalOrSlim]);\r\n\r\n    if (!props.items) {\r\n        return null;\r\n    }\r\n\r\n    const items = getItems();\r\n    return (\r\n        <ul className={props.className} role=\"menu\">\r\n            {items}\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst AppMenu = (props) => {\r\n\r\n    return <AppSubmenu items={props.model} className=\"layout-menu\"\r\n        menuActive={props.active} onRootMenuItemClick={props.onRootMenuItemClick} mobileMenuActive={props.mobileMenuActive}\r\n        onMenuItemClick={props.onMenuItemClick} root layoutMode={props.layoutMode} parentMenuItemActive />\r\n\r\n}\r\n\r\nexport default AppMenu;","import React, { useState, useEffect, useRef, useCallback, Fragment, Suspense, lazy } from 'react';\r\nimport classNames from 'classnames';\r\nimport { TabView, TabPanel } from 'primereact/tabview';\r\nimport { ProgressBar } from 'primereact/progressbar';\r\n\r\nconst AppRightMenu = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className={classNames(\"layout-right-panel\", { 'layout-right-panel-active': props.rightPanelMenuActive })} onClick={props.onRightMenuClick}>\r\n\t\t\t<TabView>\r\n\t\t\t\t<TabPanel header=\"Status\">\r\n\t\t\t\t\t<div className=\"status-title\">\r\n\t\t\t\t\t\t<span>Datacenter Status</span>\r\n\t\t\t\t\t\t<i className=\"pi pi-download\"></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<ProgressBar value={88} showValue={false} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"status-content\">\r\n\t\t\t\t\t\t<span className=\"percentage-1\">65</span><span className=\"percentage-2\">/88</span> Servers Online\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"status-title\">\r\n\t\t\t\t\t\t<span>Performance Status</span>\r\n\t\t\t\t\t\t<i className=\"pi pi-clock\"></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<ProgressBar value={65} showValue={false} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\" status-content\">\r\n\t\t\t\t\t\t<span className=\" percentage-1\">4</span>\r\n\t\t\t\t\t\t<span className=\" percentage-2\">/5</span>\r\n\t\t\t\t\t\tActive Pipeline\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\" status-title\">\r\n\t\t\t\t\t\t<span>Drivers on Way</span>\r\n\t\t\t\t\t\t<i className=\" pi pi-cloud\"></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<ProgressBar value={35} showValue={false} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\" status-content\">\r\n\t\t\t\t\t\t<span className=\" percentage-1\">12</span>\r\n\t\t\t\t\t\t<span className=\" percentage-2\">/40</span>\r\n\t\t\t\t\t\tDrivers\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\" status-title\">\r\n\t\t\t\t\t\t<span>Datacenter Status</span>\r\n\t\t\t\t\t\t<i className=\" pi pi-map-marker\"></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<ProgressBar value={85} showValue={false} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\" status-content\">\r\n\t\t\t\t\t\t<span className=\" percentage-1\">65</span><span className=\" percentage-2\">/88</span>\r\n\t\t\t\t\t\tServers Online\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</TabPanel>\r\n\r\n\t\t\t\t<TabPanel header=\"Messages\">\r\n\t\t\t\t\t<div className=\"messages-title\">\r\n\t\t\t\t\t\t<span>November 13, 2018</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"messages-content p-grid p-col\">\r\n\t\t\t\t\t\t<div className=\"time p-col-4\">00:00 GMT+03:00</div>\r\n\t\t\t\t\t\t<div className=\"message-1 p-col-8\">All systems reporting at 100%</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"messages-title\">\r\n\t\t\t\t\t\t<span>November 12, 2018</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"messages-content p-grid p-col\">\r\n\t\t\t\t\t\t<span className=\"time p-col-4\">00:00 GMT+03:00</span>\r\n\t\t\t\t\t\t<span className=\"message-1 p-col-8\">All systems reporting at 100%</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"messages-title\">\r\n\t\t\t\t\t\t<span>November 7, 2018</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"messages-content p-grid p-col\">\r\n\t\t\t\t\t\t<span className=\"time p-col-4\">09:23 GMT+03:00</span>\r\n\t\t\t\t\t\t<span className=\"message-1 p-col-8\">Everything operating normally.</span>\r\n\r\n\t\t\t\t\t\t<span className=\"time p-col-4\">08:58 GMT+03:00</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName=\"message-2 p-col-8\">We're investigating delays inupdates to PrimeFaces.org.</span>\r\n\r\n\t\t\t\t\t\t<span className=\"time p-col-4\">08:50 GMT+03:00</span>\r\n\t\t\t\t\t\t<span className=\"message-2 p-col-8\">We are investigating reports of elevated error rates.</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</TabPanel>\r\n\t\t\t</TabView>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AppRightMenu;","import React, { useState, useEffect, useRef, useCallback, Fragment, Suspense, lazy } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport { CSSTransition } from 'react-transition-group';\r\n// import hook for translations and i18n configuration file\r\nimport { useTranslation } from \"react-i18next\";\r\nimport AppTopbar from './AppTopbar';\r\nimport AppConfig from './AppConfig';\r\nimport AppMenu from './AppMenu';\r\nimport AppRightMenu from './AppRightMenu';\r\n\r\nimport PrimeReact from 'primereact/api';\r\n\r\nimport storePersist from \"./redux/storePersist\";\r\nimport { logout } from \"./redux/actions/authentication\";\r\n\r\nconst AppHome = (props) => {\r\n\r\n    const [layoutMode, setLayoutMode] = useState('slim');\r\n    const [lightMenu, setLightMenu] = useState(true);\r\n    const [overlayMenuActive, setOverlayMenuActive] = useState(false);\r\n    const [staticMenuMobileActive, setStaticMenuMobileActive] = useState(false);\r\n    const [staticMenuDesktopInactive, setStaticMenuDesktopInactive] = useState(false);\r\n    const [isRTL, setIsRTL] = useState(false);\r\n    const [inlineUser, setInlineUser] = useState(false);\r\n    const [topbarMenuActive, setTopbarMenuActive] = useState(false);\r\n    const [activeTopbarItem, setActiveTopbarItem] = useState(null);\r\n    const [rightPanelMenuActive, setRightPanelMenuActive] = useState(null);\r\n    const [inlineUserMenuActive, setInlineUserMenuActive] = useState(false);\r\n    const [menuActive, setMenuActive] = useState(false);\r\n    const [topbarColor, setTopbarColor] = useState('layout-topbar-blue');\r\n    const [theme, setTheme] = useState('blue');\r\n    const [configActive, setConfigActive] = useState(false);\r\n    const [inputStyle, setInputStyle] = useState('filled');\r\n    const [ripple, setRipple] = useState(false);\r\n    // destructuring t() function for useTranslation()\r\n    const [t, i18n] = useTranslation('common');\r\n    const history = useHistory();\r\n    /* Initialize state to hold */\r\n    const [menuData, setMenuData] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const { isLoggedIn: isLogging } = useSelector((state) => state.Authentication);\r\n    const { authorities: authoritiesFromAuth } = useSelector((state) => state.Authentication);\r\n\r\n    const menuAnnonymous = [\r\n        {\r\n            label: `${t('menuPublic.dashboardTitle')}`, icon: 'pi pi-fw pi-home',\r\n            items: [\r\n                {\r\n                    label: `${t('menuPublic.dashboardSubtitle1')}`, icon: 'pi pi-fw pi-home', to: '/home'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: `${t('menuPublic.pagesTitle')}`, icon: 'pi pi-fw pi-copy',\r\n            items: [\r\n                {\r\n                    label: `${t('menuPublic.pagesSubtitle1')}`, icon: 'pi pi-fw pi-id-card', to: '/signup'\r\n\r\n                },\r\n                { label: `${t('menuPublic.pagesSubtitle2')}`, icon: 'pi pi-fw pi pi-sign-in', to: '/login' },\r\n                { label: `${t('menuPublic.pagesSubtitle4')}`, icon: 'pi pi-question-circle', to: '/about' }\r\n            ]\r\n        }\r\n    ];\r\n\r\n    const menuAdministrator = [\r\n        {\r\n            label: `${t('menuPrivate.dashboardTitle')}`, icon: 'pi pi-fw pi-home',\r\n            items: [\r\n                { label: `${t('menuPrivate.dashboardSubtitle1')}`, icon: 'pi pi-fw pi-home', to: '/home' }\r\n            ]\r\n        },\r\n        {\r\n            label: `${t('menuPrivate.managmentTitle')}`, icon: 'pi pi-fw pi-copy',\r\n            items: [\r\n                { label: `${t('menuPrivate.managmentSubtitle1')}`, icon: 'pi pi-fw pi-users', to: '/managment/accounts' }\r\n            ]\r\n        },\r\n        {\r\n            label: `${t('menuPrivate.taskTitle')}`, icon: 'fa fa-fw fa-suitcase', badge: 8, badgeStyleClass: 'teal-badge',\r\n            items: [\r\n                {\r\n                    label:  `${t('menuPrivate.taskSubtitle')}`, icon: 'fa fa-fw fa-suitcase',\r\n                    items: [\r\n                        {\r\n                            label: `${t('menuPrivate.taskContent1')}`, icon: 'fa fa-fw fa-plus', to: '/planner/task/save',\r\n                        },\r\n                        {\r\n                            label: `${t('menuPrivate.taskContent2')}`, icon: 'fa fa-fw fa-tags', to: '/planner/task/assign',\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n\r\n    const menuUser = [\r\n        {\r\n            label: `${t('menuPrivate.dashboardTitle')}`, icon: 'pi pi-fw pi-home',\r\n            items: [\r\n                { label: `${t('menuPrivate.dashboardSubtitle1')}`, icon: 'pi pi-fw pi-home', to: '/home' }\r\n            ]\r\n        }\r\n    ]\r\n\r\n    const currentUserData = useCallback(() => {\r\n        let _role;\r\n        if (authoritiesFromAuth.length > 1) {\r\n            _role = [];\r\n            authoritiesFromAuth.forEach(role => {\r\n                _role.push(role.authority);\r\n            });\r\n        } else {\r\n            const resultado = authoritiesFromAuth.find(item => item.authority);\r\n            _role = resultado.authority;\r\n            switch (_role) {\r\n                case \"ANONYMOUS\":\r\n                    setMenuData(menuAnnonymous);\r\n                    break;\r\n                case \"ROLE_ADMIN\":\r\n                    setMenuData(menuAdministrator);\r\n                    break;\r\n                case \"ROLE_USER\":\r\n                    setMenuData(menuUser);\r\n                    break;\r\n                default:\r\n                // do nothing\r\n            }\r\n        }\r\n    }, [t, authoritiesFromAuth])\r\n\r\n    useEffect(() => {\r\n        // first time to fetch data\r\n        let isValidRole = authoritiesFromAuth.some(item => item.authority === \"ANONYMOUS\" || \"ROLE_ADMIN\" || \"ROLE_USER\");\r\n        if (!isValidRole) {\r\n            history.push('/error');\r\n        } else {\r\n            currentUserData();\r\n        }\r\n    }, [currentUserData]);\r\n\r\n    const confirmLogoutButtonClick = () => {\r\n        let item = storePersist.get(\"user\");\r\n        if (item !== null) {\r\n            history.push({\r\n                pathname: '/'\r\n            });\r\n            dispatch(logout());\r\n        }\r\n    }\r\n\r\n    let topbarItemClick;\r\n    let menuClick;\r\n    let rightMenuClick;\r\n    let userMenuClick;\r\n    let configClick = false;\r\n\r\n    useEffect(() => {\r\n        if (staticMenuMobileActive) {\r\n            blockBodyScroll();\r\n        }\r\n        else {\r\n            unblockBodyScroll();\r\n        }\r\n    }, [staticMenuMobileActive]);\r\n\r\n    const onInputStyleChange = (inputStyle) => {\r\n        setInputStyle(inputStyle);\r\n    };\r\n\r\n    const onRippleChange = (e) => {\r\n        PrimeReact.ripple = e.value;\r\n        setRipple(e.value);\r\n    };\r\n\r\n    const onDocumentClick = () => {\r\n        if (!topbarItemClick) {\r\n            setActiveTopbarItem(null);\r\n            setTopbarMenuActive(false);\r\n        }\r\n\r\n        if (!rightMenuClick) {\r\n            setRightPanelMenuActive(false);\r\n        }\r\n\r\n        if (!userMenuClick && isSlim() && !isMobile()) {\r\n            setInlineUserMenuActive(false);\r\n        }\r\n\r\n        if (!menuClick) {\r\n            if (isHorizontal() || isSlim()) {\r\n                setMenuActive(false);\r\n            }\r\n\r\n            if (overlayMenuActive || staticMenuMobileActive) {\r\n                hideOverlayMenu();\r\n            }\r\n\r\n            unblockBodyScroll();\r\n        }\r\n\r\n        if (configActive && !configClick) {\r\n            setConfigActive(false);\r\n        }\r\n\r\n        topbarItemClick = false;\r\n        menuClick = false;\r\n        rightMenuClick = false;\r\n        userMenuClick = false;\r\n        configClick = false;\r\n    };\r\n\r\n    const onMenuButtonClick = (event) => {\r\n        menuClick = true;\r\n        setTopbarMenuActive(false);\r\n        setRightPanelMenuActive(false);\r\n\r\n        if (layoutMode === 'overlay') {\r\n            setOverlayMenuActive(prevOverlayMenuActive => !prevOverlayMenuActive);\r\n        }\r\n\r\n        if (isDesktop())\r\n            setStaticMenuDesktopInactive(prevStaticMenuDesktopInactive => !prevStaticMenuDesktopInactive);\r\n        else {\r\n            setStaticMenuMobileActive(prevStaticMenuMobileActive => !prevStaticMenuMobileActive);\r\n            if (staticMenuMobileActive) {\r\n                blockBodyScroll();\r\n            } else {\r\n                unblockBodyScroll();\r\n            }\r\n        }\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    const onTopbarMenuButtonClick = (event) => {\r\n        topbarItemClick = true;\r\n        setTopbarMenuActive(prevTopbarMenuActive => !prevTopbarMenuActive);\r\n        hideOverlayMenu();\r\n        event.preventDefault();\r\n    };\r\n\r\n    const onTopbarItemClick = (event) => {\r\n        topbarItemClick = true;\r\n\r\n        if (activeTopbarItem === event.item)\r\n            setActiveTopbarItem(null);\r\n        else\r\n            setActiveTopbarItem(event.item);\r\n\r\n        event.originalEvent.preventDefault();\r\n    };\r\n\r\n    const onMenuClick = () => {\r\n        menuClick = true;\r\n    };\r\n\r\n    const onInlineUserClick = () => {\r\n        userMenuClick = true;\r\n        setInlineUserMenuActive(prevInlineUserMenuActive => !prevInlineUserMenuActive);\r\n        setMenuActive(false);\r\n    };\r\n\r\n    const onConfigClick = () => {\r\n        configClick = true;\r\n    };\r\n\r\n    const onConfigButtonClick = () => {\r\n        setConfigActive(prevConfigActive => !prevConfigActive);\r\n        configClick = true;\r\n    };\r\n\r\n    const blockBodyScroll = () => {\r\n        if (document.body.classList) {\r\n            document.body.classList.add('blocked-scroll');\r\n        }\r\n        else {\r\n            document.body.className += ' blocked-scroll';\r\n        }\r\n    };\r\n\r\n    const unblockBodyScroll = () => {\r\n        if (document.body.classList) {\r\n            document.body.classList.remove('blocked-scroll');\r\n        }\r\n        else {\r\n            document.body.className = document.body.className.replace(new RegExp('(^|\\\\b)' +\r\n                'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n        }\r\n    };\r\n\r\n    const onRightMenuButtonClick = (event) => {\r\n        rightMenuClick = true;\r\n        setRightPanelMenuActive(prevRightPanelMenuActive => !prevRightPanelMenuActive);\r\n\r\n        hideOverlayMenu();\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    const onRightMenuClick = () => {\r\n        rightMenuClick = true;\r\n    };\r\n\r\n    const hideOverlayMenu = () => {\r\n        setOverlayMenuActive(false);\r\n        setStaticMenuMobileActive(false);\r\n    };\r\n\r\n    const onMenuItemClick = (event) => {\r\n        if (!event.item.items) {\r\n            hideOverlayMenu();\r\n        }\r\n        if (!event.item.items && (isHorizontal() || isSlim())) {\r\n            setMenuActive(false);\r\n        }\r\n    };\r\n\r\n    const onRootMenuItemClick = () => {\r\n        setMenuActive(prevMenuActive => !prevMenuActive);\r\n        setInlineUserMenuActive(false);\r\n    };\r\n\r\n    const isDesktop = () => {\r\n        return window.innerWidth > 896;\r\n    };\r\n\r\n    const isMobile = () => {\r\n        return window.innerWidth <= 1025;\r\n    };\r\n\r\n    const isHorizontal = () => {\r\n        return layoutMode === 'horizontal';\r\n    };\r\n\r\n    const isSlim = () => {\r\n        return layoutMode === 'slim';\r\n    };\r\n\r\n    const onLayoutModeChange = (layoutMode) => {\r\n        setLayoutMode(layoutMode);\r\n        setStaticMenuDesktopInactive(false);\r\n        setOverlayMenuActive(false);\r\n\r\n        if (layoutMode === 'horizontal' && inlineUser) {\r\n            setInlineUser(false)\r\n        }\r\n\r\n    };\r\n\r\n    const onMenuColorChange = (menuColor) => {\r\n        setLightMenu(menuColor);\r\n    };\r\n\r\n    const onThemeChange = (theme) => {\r\n        setTheme(theme);\r\n    };\r\n\r\n    const onProfileModeChange = (profileMode) => {\r\n        setInlineUser(profileMode);\r\n    };\r\n\r\n    const onOrientationChange = (orientation) => {\r\n        setIsRTL(orientation);\r\n    };\r\n\r\n    const onTopbarColorChange = (color) => {\r\n        setTopbarColor(color);\r\n    };\r\n\r\n    const layoutClassName = classNames('layout-wrapper', {\r\n        'layout-horizontal': layoutMode === 'horizontal',\r\n        'layout-overlay': layoutMode === 'overlay',\r\n        'layout-static': layoutMode === 'static',\r\n        'layout-slim': layoutMode === 'slim',\r\n        'layout-menu-light': lightMenu,\r\n        'layout-menu-dark': !lightMenu,\r\n        'layout-overlay-active': overlayMenuActive,\r\n        'layout-mobile-active': staticMenuMobileActive,\r\n        'layout-static-inactive': staticMenuDesktopInactive,\r\n        'layout-rtl': isRTL,\r\n        'p-input-filled': inputStyle === 'filled',\r\n        'p-ripple-disabled': !ripple\r\n    }, topbarColor);\r\n\r\n    const inlineUserTimeout = layoutMode === 'slim' ? 0 : { enter: 1000, exit: 450 };\r\n\r\n    return (\r\n        <div className={layoutClassName} onClick={onDocumentClick}>\r\n\r\n            <AppTopbar topbarMenuActive={topbarMenuActive} activeTopbarItem={activeTopbarItem} inlineUser={inlineUser}\r\n                onRightMenuButtonClick={onRightMenuButtonClick} onMenuButtonClick={onMenuButtonClick}\r\n                onTopbarMenuButtonClick={onTopbarMenuButtonClick} onTopbarItemClick={onTopbarItemClick} confirmLogoutButtonClick={confirmLogoutButtonClick} />\r\n\r\n            <AppRightMenu rightPanelMenuActive={rightPanelMenuActive} onRightMenuClick={onRightMenuClick}></AppRightMenu>\r\n\r\n            <div className=\"layout-menu-container\" onClick={onMenuClick}>\r\n                {\r\n                    inlineUser && (\r\n                        <Fragment>\r\n                            {isLogging === false ? (\r\n                                <Fragment>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <div className=\"layout-profile\">\r\n                                        <button type=\"button\" className=\"p-link layout-profile-button\" onClick={onInlineUserClick}>\r\n                                            <img src=\"assets/layout/images/avatar.png\" alt=\"roma-layout\" />\r\n                                            <div className=\"layout-profile-userinfo\">\r\n                                                <span className=\"layout-profile-name\">Arlene Welch</span>\r\n                                                <span className=\"layout-profile-role\">Design Ops</span>\r\n                                            </div>\r\n                                        </button>\r\n                                        <CSSTransition classNames=\"p-toggleable-content\" timeout={inlineUserTimeout} in={inlineUserMenuActive} unmountOnExit>\r\n                                            <ul className={classNames('layout-profile-menu', { 'profile-menu-active': inlineUserMenuActive })}>\r\n                                                <li>\r\n                                                    <button type=\"button\" className=\"p-link\" onClick={() => history.push('/account')}>\r\n                                                        <i className=\"pi pi-fw pi-user\"></i><span>{t(\"globalButton.formButtonTitle5\")}</span>\r\n                                                    </button>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <button type=\"button\" className=\"p-link\">\r\n                                                        <i className=\"pi pi-fw pi-cog\"></i><span>{t(\"globalButton.formButtonTitle6\")}</span>\r\n                                                    </button>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <button type=\"button\" className=\"p-link\">\r\n                                                        <i className=\"pi pi-fw pi-envelope\"></i><span>{t(\"globalButton.formButtonTitle7\")}</span>\r\n                                                    </button>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <button type=\"button\" className=\"p-link\">\r\n                                                        <i className=\"pi pi-fw pi-bell\"></i><span>{t(\"globalButton.formButtonTitle8\")}</span>\r\n                                                    </button>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <button type=\"button\" className=\"p-link\" onClick={confirmLogoutButtonClick}>\r\n                                                        <i className=\"pi pi-fw pi-sign-out\"></i><span>{t(\"globalButton.formButtonTitle4\")}</span>\r\n                                                    </button>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </CSSTransition>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )}\r\n                        </Fragment>\r\n                    )\r\n                }\r\n                <AppMenu model={menuData} onMenuItemClick={onMenuItemClick} onRootMenuItemClick={onRootMenuItemClick} layoutMode={layoutMode} active={menuActive} mobileMenuActive={staticMenuMobileActive} />\r\n            </div>\r\n\r\n            <div className=\"layout-main\">\r\n                {props.children}\r\n                <AppConfig configActive={configActive} onConfigClick={onConfigClick} onConfigButtonClick={onConfigButtonClick}\r\n                    rippleActive={ripple} onRippleChange={onRippleChange} inputStyle={inputStyle} onInputStyleChange={onInputStyleChange}\r\n                    theme={theme} onThemeChange={onThemeChange} topbarColor={topbarColor} onTopbarColorChange={onTopbarColorChange}\r\n                    inlineUser={inlineUser} onProfileModeChange={onProfileModeChange} isRTL={isRTL} onOrientationChange={onOrientationChange}\r\n                    layoutMode={layoutMode} onLayoutModeChange={onLayoutModeChange} lightMenu={lightMenu} onMenuColorChange={onMenuColorChange}></AppConfig>\r\n            </div>\r\n\r\n            <div className=\"layout-content-mask\"></div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AppHome;","import React, { useState, useEffect, useRef, useCallback, Fragment, Suspense, lazy } from 'react';\r\nimport { Route, Redirect, Switch, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { I18nextProvider } from \"react-i18next\";\r\n// import i18next (needs to be bundled ;)) \r\nimport i18next from './utils/i18n/i18next';\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { PublicRoute } from './utils/PublicRoute';\r\nimport { PrivateRoute } from './utils/PrivateRoute';\r\n\r\nimport AppHome from './AppHome';\r\n\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primeflex/primeflex.css';\r\n\r\nconst App = () => {\r\n\r\n    const { isLoggedIn: isLogging } = useSelector((state) => state.Authentication);\r\n    const { authorities: authoritiesFromAuth } = useSelector((state) => state.Authentication);\r\n\r\n    const NotFound = lazy(() => import('./pages/NotFound'));\r\n    const EmptyPage = lazy(() => import('./pages/EmptyPage'));\r\n    const LandingPage = lazy(() => import('./pages/LandingPage'));\r\n    const SignupPage = lazy(() => import('./pages/SignupPage'));\r\n    const MyAccountPage = lazy(() => import('./pages/MyAccountPage'));\r\n    const ManagmentAccountsPage = lazy(() => import('./pages/ManagmentAccountsPage'));\r\n    const Dashboard = lazy(() => import('./components/index/Dashboard'));\r\n    const About = lazy(() => import('./components/index/About'));\r\n\r\n    return (\r\n        // i18n translations might still be loaded by the http backenduse react's Suspense\r\n        <Suspense fallback=\"loading\">\r\n            <Fragment>\r\n                <I18nextProvider i18n={i18next}>\r\n                    <Fragment>\r\n                        <AppHome>\r\n                            <Route\r\n                                render={() => {\r\n                                    if (isLogging === false) {\r\n                                        return (\r\n                                            <Switch>\r\n                                                <PublicRoute path=\"/\" exact={true} grantedAuthorities={authoritiesFromAuth} component={LandingPage} />\r\n                                                <PublicRoute path=\"/home\" grantedAuthorities={authoritiesFromAuth} component={LandingPage} />\r\n                                                <PublicRoute path=\"/empty\" grantedAuthorities={authoritiesFromAuth} component={EmptyPage} />\r\n                                                <PublicRoute path=\"/about\" grantedAuthorities={authoritiesFromAuth} component={About} />\r\n                                                <PublicRoute path=\"/signup\" grantedAuthorities={authoritiesFromAuth} component={SignupPage} />\r\n                                                <PublicRoute path=\"*\" grantedAuthorities={authoritiesFromAuth} component={NotFound} />\r\n                                            </Switch>\r\n                                        )\r\n                                    } else if (isLogging === true) {\r\n                                        return (\r\n                                            <Switch>\r\n                                                <PrivateRoute path=\"/\" exact={true} grantedAuthorities={authoritiesFromAuth} component={Dashboard} />\r\n                                                <PrivateRoute path=\"/home\" grantedAuthorities={authoritiesFromAuth} component={Dashboard} />\r\n                                                <PrivateRoute path=\"/account\" grantedAuthorities={authoritiesFromAuth} component={MyAccountPage} />\r\n                                                <PrivateRoute path=\"/managment/accounts\" grantedAuthorities={authoritiesFromAuth} component={ManagmentAccountsPage} />\r\n                                                <PrivateRoute path=\"*\" grantedAuthorities={authoritiesFromAuth} component={NotFound} />\r\n                                            </Switch>\r\n                                        )\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </AppHome>\r\n                    </Fragment>\r\n                </I18nextProvider>\r\n            </Fragment>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nexport default (withTranslation()(App));","import React, { useState, useEffect, useRef, useCallback, Fragment, Suspense, lazy } from 'react';\r\nimport { Route, withRouter, useLocation } from 'react-router-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store/store\";\r\nimport App from './App';\r\n\r\nconst AppWrapper = () => {\r\n\tlet location = useLocation();\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, 0)\r\n\t}, [location]);\r\n\r\n\tconst Error = lazy(() => import('./pages/Error'));\r\n\tconst NotFound = lazy(() => import('./pages/NotFound'));\r\n\tconst Access = lazy(() => import('./pages/Access'));\r\n\tconst LoginPage = lazy(() => import('./pages/LoginPage'));\r\n\r\n\tswitch (location.pathname) {\r\n\t\tcase '/login':\r\n\t\t\treturn <Provider store={store}>\r\n\t\t\t\t<Suspense fallback=\"loading\">\r\n\t\t\t\t\t<Route path=\"/login\" component={LoginPage} />\r\n\t\t\t\t</Suspense>\r\n\t\t\t</Provider>\r\n\t\tcase '/error':\r\n\t\t\treturn <Suspense fallback=\"loading\">\r\n\t\t\t\t<Route path=\"/error\" component={Error} />\r\n\t\t\t</Suspense>\r\n\t\tcase '/notfound':\r\n\t\t\treturn <Suspense fallback=\"loading\">\r\n\t\t\t\t<Route path=\"/notfound\" component={NotFound} />\r\n\t\t\t</Suspense>\r\n\t\tcase '/access':\r\n\t\t\treturn <Suspense fallback=\"loading\">\r\n\t\t\t\t<Route path=\"/access\" component={Access} />\r\n\t\t\t</Suspense>\r\n\t\tdefault:\r\n\t\t\treturn <Provider store={store}>\r\n\t\t\t\t<App />\r\n\t\t\t</Provider>;\r\n\t}\r\n}\r\n\r\nexport default withRouter(AppWrapper);","import 'react-app-polyfill/ie11';\r\nimport React, { useState, useEffect, useRef, useCallback, Fragment, Suspense, lazy } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\nimport AppWrapper from './AppWrapper';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <AppWrapper />\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\n\r\nexport const GET_CATALOG_USER_SUCCESS = \"GET_CATALOG_USER_SUCCESS\";\r\nexport const GET_CATALOG_USER_FAILURE = \"GET_CATALOG_USER_FAILURE\";\r\nexport const UPDATE_CATALOG_USER_SUCCESS = \"UPDATE_CATALOG_USER_SUCCESS\";\r\nexport const UPDATE_CATALOG_USER_FAILURE = \"UPDATE_CATALOG_USER_FAILURE\";\r\n\r\nexport const GET_ALL_CATALOG_USERS_SUCCESS = \"GET_ALL_CATALOG_USERS_SUCCESS\";\r\nexport const GET_ALL_CATALOG_USERS_FAILURE = \"GET_ALL_CATALOG_USERS_FAILURE\";\r\nexport const CREATE_CATALOG_USERS_SUCCESS = \"CREATE_CATALOG_USERS_SUCCESS\";\r\nexport const CREATE_CATALOG_USERS_FAILURE = \"CREATE_CATALOG_USERS_FAILURE\";\r\nexport const UPDATE_CATALOG_USERS_SUCCESS = \"UPDATE_CATALOG_USERS_SUCCESS\";\r\nexport const UPDATE_CATALOG_USERS_FAILURE = \"UPDATE_CATALOG_USERS_FAILURE\";\r\nexport const DELETE_CATALOG_USERS_SUCCESS = \"DELETE_CATALOG_USERS_SUCCESS\";\r\nexport const DELETE_CATALOG_USERS_FAILURE = \"DELETE_CATALOG_USERS_FAILURE\";\r\n\r\nexport const SELECTED_USER = \"SELECTED_USER\";\r\nexport const REMOVE_SELECTED_USER = \"REMOVE_SELECTED_USER\";"],"sourceRoot":""}